@using Demo002.Models
@model Demo002.Models.CartInformation

@{
    ViewBag.Title = "Cart";
    var shoppingCart = ViewBag.ShoppingCart as ShoppingCart;
}

<h2>This is shopping cart</h2>
<ul>
    @foreach (var cartItem in shoppingCart.GetCartItems())
    {
        <li>
            @using (Html.BeginForm("UpdateCart", "ShoppingCart", FormMethod.Get))
            {
                <span>@cartItem.ProductName</span>
                <span>
                    @Html.ActionLink("-", "AddToCart", new { productId = cartItem.ProductId, quantity = -1 })
                    <input type="text" value="@cartItem.Quantity" class="cart-quantity" name="quantity" />
                    <input type="hidden" value="@cartItem.ProductId" name="productId" />
                    @Html.ActionLink("+", "AddToCart", new { productId = cartItem.ProductId, quantity = 1 })
                </span>
                <span>@cartItem.UnitPrice - </span>
                <span>
                    <input type="submit" value="Update" class="btn btn-primary" />
                    @Html.ActionLink("Remove", "RemoveFromCart", new { productId = cartItem.ProductId }, new { @class = "btn btn-danger" })
                </span>
            }
        </li>
    }
</ul>
<p><strong>Total price: @shoppingCart.GetTotalPrice()</strong></p>

@using (Html.BeginForm("CreateOrder", "ShoppingCart"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Checkout Information</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.PaymentTypeId, "Payment Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PaymentTypeId", EnumHelper.GetSelectList(typeof(Order.PaymentType)) , htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PaymentTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShipName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ShipName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ShipName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShipPhone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ShipPhone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ShipPhone, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ShipAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ShipAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ShipAddress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}